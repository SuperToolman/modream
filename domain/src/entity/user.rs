//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.11
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use utoipa::ToSchema;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, ToSchema)]
#[sea_orm(table_name = "User")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "CreateTime", column_type = "custom(\"DATETIME\")")]
    pub create_time: String,
    #[sea_orm(column_name = "UpdateTime", column_type = "custom(\"DATETIME\")")]
    pub update_time: String,
    #[sea_orm(column_name = "Name", column_type = "Text", nullable)]
    pub name: Option<String>,
    #[sea_orm(column_name = "EMail", column_type = "Text", nullable)]
    pub e_mail: Option<String>,
    #[sea_orm(column_name = "Phone", column_type = "Text", nullable)]
    pub phone: Option<String>,
    #[sea_orm(column_name = "Password", column_type = "Text", nullable)]
    pub password: Option<String>,
    #[sea_orm(column_name = "Coin")]
    pub coin: i32,
    #[sea_orm(column_name = "Level")]
    pub level: i32,
    #[sea_orm(column_name = "NowExp")]
    pub now_exp: i32,
    #[sea_orm(column_name = "NextExp")]
    pub next_exp: i32,
    #[sea_orm(column_name = "Birthday", column_type = "custom(\"DATE\")", nullable)]
    pub birthday: Option<String>,
    #[sea_orm(column_name = "Sign", column_type = "Text", nullable)]
    pub sign: Option<String>,
    #[sea_orm(column_name = "Sex", column_type = "Text", nullable)]
    pub sex: Option<String>,
    #[sea_orm(column_name = "IsHaveAvatar")]
    pub is_have_avatar: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
